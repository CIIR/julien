High-Level Features:
- inter-term dependencies
- incorporating information from multiple sources
- inter-document dependencies (based on a filtered list)
- query iteration
- scoring a single document (repeatedly, but with different parameters)

THINGS TO FIX/IMPROVE:
- How do we memoize
  - decompression
  - basic feature calculation?

- Annotations. We want them, particularly for debugging. How to cleanly
  add them?

- When instantiating iterators we need to track the following:
  - what score tree is connected to what iterators (and vice-versa)
  - a map of the weights (again, both ways would be good)

- To make the toolkit configurable, should we focus on schema-validated JSON
  or a series of case classes? (Note: case classes have a 22-parameter limit,
  but are built into Scala more cleanly than JSON)

TODO:
- Add some tests back in. ScalaTest, I think.
- Maxscore
- WAND
- Cascade Ranking Model
- Cost-Estimate? (check paper)
- Delayed execution
- feature-rewriting (delta-fns)