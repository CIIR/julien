High-Level Features:
- inter-term dependencies
- incorporating information from multiple sources
- inter-document dependencies (based on a filtered list)
- query iteration
- scoring a single document (repeatedly, but with different parameters)

THINGS TO FIX/IMPROVE:
- How do we memoize statistics functions?
- Annotations. We want them, particularly for debugging. How to cleanly
  add them?
- When instantiating iterators we need to track the following:
  - what score tree is connected to what iterators (and vice-versa)
  - a map of the weights (again, both ways would be good)


- I like the composition of scoring function + filter + iterator, and so
  on. Any more we can do?
- To make the toolkit configurable, should we focus on schema-validated JSON
  or a series of case classes? (Note: case classes have a 22-parameter limit,
  but are built into Scala more cleanly than JSON)

TODO:
- Need a place to put the aggregate statistics for the collection - make a
  manifest for the "whole thing"?
- Add some tests back in.